
Using Babel and boilerplate

npm install -g babel-cli@6.26.0

babel --version

/boilerplate$ npm init (with default values)
- writes package.json

/boilerplate$ npm install babel-preset-env@1.6.1

/boilerplate$ babel input.js -o output.js --presets env

- npm install (looks from package.json to load node modules)

/boilerplate$ babel src/index.js -o public/scripts/bundle.js --presets env

1. npm run build

2.     "build": "babel src/index.js -o public/scripts/bundle.js --presets env --watch"

3. npm uninstall -g babel-cli live-server

4. npm install babel-cli@6.26.0 live-server@1.2.0

5. npm run serve, npm run build

6. /boilerplate$ npm install webpack@4.5.0 webpack-cli@2.0.14

7. npm run webpack

8. /boilerplate$ npm install babel-loader@7.1.4

9. Rename of script: npm run webpack -> npm run build

10. /boilerplate$ npm install webpack-dev-server@3.1.3

11. --> npm run dev-server

12. /hangman$ npm install babel-polyfill@6.26.0

13. - npm install uuid, import uuidv4 from 'uuid/v4'
    - npm install validator, import validator from 'validator'

    - npm uninstall uuid validator (if not used)

    